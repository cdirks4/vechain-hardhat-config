/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ShoeRegistry,
  ShoeRegistryInterface,
} from "../../../contracts/ShoeRegistry.test.sol/ShoeRegistry";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ShoeListed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "ShoePurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "modelGroup",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "ShoeRegistered",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "modelGroup",
        type: "uint256",
      },
    ],
    name: "getPriceTrend",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "listShoe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "listings",
    outputs: [
      {
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextTrackingNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "priceTrends",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
    ],
    name: "purchaseShoe",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "modelGroup",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
    ],
    name: "registerShoe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "shoes",
    outputs: [
      {
        internalType: "uint256",
        name: "modelGroup",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "size",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "address",
        name: "currentOwner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "trackingNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "newPrice",
        type: "uint256",
      },
    ],
    name: "updateListingPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611188806100206000396000f3fe6080604052600436106100865760003560e01c806390ea10f61161005957806390ea10f61461015e578063bac958ea1461017a578063c2080794146101b7578063c4604943146101f4578063fe5876991461021d57610086565b80634d3084d31461008b57806360196ef8146100c9578063607473cf146100f45780638abf668a14610135575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610c70565b610246565b6040516100c0929190610cbf565b60405180910390f35b3480156100d557600080fd5b506100de610287565b6040516100eb9190610ce8565b60405180910390f35b34801561010057600080fd5b5061011b60048036038101906101169190610d03565b61028d565b60405161012c959493929190610d71565b60405180910390f35b34801561014157600080fd5b5061015c60048036038101906101579190610c70565b610303565b005b61017860048036038101906101739190610d03565b61053c565b005b34801561018657600080fd5b506101a1600480360381019061019c9190610d03565b6107d4565b6040516101ae9190610ce8565b60405180910390f35b3480156101c357600080fd5b506101de60048036038101906101d99190610d03565b6107ec565b6040516101eb9190610ce8565b60405180910390f35b34801561020057600080fd5b5061021b60048036038101906102169190610c70565b610809565b005b34801561022957600080fd5b50610244600480360381019061023f9190610c70565b6109d7565b005b6001602052816000526040600020818154811061026257600080fd5b9060005260206000209060020201600091509150508060000154908060010154905082565b60025481565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b8161030d33610b4c565b61034b60008083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b4c565b61038960008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b4c565b3373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061045857503373ffffffffffffffffffffffffffffffffffffffff1660008083815260200190815260200160002060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b610497576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048e90610e47565b60405180910390fd5b600160008481526020019081526020016000206040518060400160405280858152602001848152509080600181540180825580915050600190039060005260206000209060020201600090919091909150600082015181600001556020820151816001015550507fce6f6b45ed02f0bdb1b2aa0cbb42e48aaf8d1e54c34fa65186b80055f7b14ff1838360405161052f929190610cbf565b60405180910390a1505050565b6000600160008381526020019081526020016000209050600081805490501161059a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059190610ed9565b60405180910390fd5b600080600090505b82805490508110156105f457348382815481106105c2576105c1610ef9565b5b906000526020600020906002020160010154036105e1578091506105f4565b80806105ec90610f57565b9150506105a2565b5060008111610638576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161062f90611011565b60405180910390fd5b600082828154811061064d5761064c610ef9565b5b9060005260206000209060020201600101549050600080600086815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f193505050501580156106e1573d6000803e3d6000fd5b503360008087815260200190815260200160002060040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060016000868152602001908152602001600020838154811061075b5761075a610ef9565b5b9060005260206000209060020201600080820160009055600182016000905550508160036000878152602001908152602001600020819055507f2d456aface9fc589594f3a2551b5d52ed2dfdfa8e2112f3b7be3fbf3dd2a98f085836040516107c5929190610cbf565b60405180910390a15050505050565b60036020528060005260406000206000915090505481565b600060036000838152602001908152602001600020549050919050565b60006001600084815260200190815260200160002090506000818054905011610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90610ed9565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff1660008085815260200190815260200160002060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461090a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610901906110a3565b60405180910390fd5b600080600090505b8280549050811015610964578383828154811061093257610931610ef9565b5b9060005260206000209060020201600101540361095157809150610964565b808061095c90610f57565b915050610912565b50600081116109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f90611011565b60405180910390fd5b828282815481106109bc576109bb610ef9565b5b90600052602060002090600202016001018190555050505050565b60006002549050600260008154809291906109f190610f57565b91905055506040518060a001604052808481526020018381526020018281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff1681525060008083815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f281a6d20a6bbb209524d896c6307790b6fb610fafa22a93b7848fc425c07001881848433604051610b3f94939291906110c3565b60405180910390a1505050565b610be281604051602401610b609190611108565b6040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610be5565b50565b610bfc81610bf4610bff610c20565b63ffffffff16565b50565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b610c2b819050919050565b610c33611123565b565b600080fd5b6000819050919050565b610c4d81610c3a565b8114610c5857600080fd5b50565b600081359050610c6a81610c44565b92915050565b60008060408385031215610c8757610c86610c35565b5b6000610c9585828601610c5b565b9250506020610ca685828601610c5b565b9150509250929050565b610cb981610c3a565b82525050565b6000604082019050610cd46000830185610cb0565b610ce16020830184610cb0565b9392505050565b6000602082019050610cfd6000830184610cb0565b92915050565b600060208284031215610d1957610d18610c35565b5b6000610d2784828501610c5b565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610d5b82610d30565b9050919050565b610d6b81610d50565b82525050565b600060a082019050610d866000830188610cb0565b610d936020830187610cb0565b610da06040830186610cb0565b610dad6060830185610d62565b610dba6080830184610d62565b9695505050505050565b600082825260208201905092915050565b7f596f752063616e206f6e6c79206c69737420796f7572206f776e2073686f657360008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610e31602183610dc4565b9150610e3c82610dd5565b604082019050919050565b60006020820190508181036000830152610e6081610e24565b9050919050565b7f4e6f206c697374696e677320617661696c61626c6520666f722074686973207360008201527f686f652e00000000000000000000000000000000000000000000000000000000602082015250565b6000610ec3602483610dc4565b9150610ece82610e67565b604082019050919050565b60006020820190508181036000830152610ef281610eb6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610f6282610c3a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610f9457610f93610f28565b5b600182019050919050565b7f53656c6563746564207072696365206e6f7420666f756e6420666f722074686960008201527f732073686f652e00000000000000000000000000000000000000000000000000602082015250565b6000610ffb602783610dc4565b915061100682610f9f565b604082019050919050565b6000602082019050818103600083015261102a81610fee565b9050919050565b7f596f752063616e206f6e6c792075706461746520746865206c697374696e672060008201527f696620796f75206f776e207468652073686f652e000000000000000000000000602082015250565b600061108d603483610dc4565b915061109882611031565b604082019050919050565b600060208201905081810360008301526110bc81611080565b9050919050565b60006080820190506110d86000830187610cb0565b6110e56020830186610cb0565b6110f26040830185610cb0565b6110ff6060830184610d62565b95945050505050565b600060208201905061111d6000830184610d62565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea264697066735822122047b82578754092c8ba57935c7eba842ff122289423ce91c6d4bf82a32dc390fa64736f6c63430008140033";

type ShoeRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ShoeRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ShoeRegistry__factory extends ContractFactory {
  constructor(...args: ShoeRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ShoeRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ShoeRegistry__factory {
    return super.connect(runner) as ShoeRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ShoeRegistryInterface {
    return new Interface(_abi) as ShoeRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ShoeRegistry {
    return new Contract(address, _abi, runner) as unknown as ShoeRegistry;
  }
}
